{"version":3,"sources":["components/GridCard.js","components/Grid.js","components/TextBubble.js","components/SignBoard.js","components/Input.js","components/Chat.js","lib/ResponseParser.js","components/Main.js","App.js","index.js"],"names":["cardStyle","padding","display","flexDirection","imgStyle","height","width","borderRadius","nameStyle","backgroundColor","color","textAlign","marginTop","Grid","this","props","img","name","style","src","alt","React","Component","gridGap","justifyContent","flexWrap","gridTemplateColumns","paddingTop","paddingBottom","techList","cards","map","tech","key","process","profileImageStyle","ContainerStyle","textBubble","paddingLeft","marginLeft","marginRight","TextBubble","reverse","avatar","content","className","container","borderRadiusBottom","subTitleStyle","title","subTitle","containerStyle","Input","inputRef","createRef","text","onSubmit","e","preventDefault","addTextToChat","current","value","onClick","type","autoFocus","ref","placeholder","Chat","scrollRef","window","scrollTo","document","body","scrollHeight","chat","flexGrow","INTENTS","getIntent","textString","lowerCase","toLowerCase","i","length","includes","backgroundStyle","minHeight","background","backgroundSize","Main","state","beachLoaded","forEach","preloadImg","Image","newState","onerror","err","console","error","setState","onload","comp","newText","host","response","generateResponse","renderFollowUp","intent","ResponseParser","timeout","setTimeout","updateChat","addContent","App","render","getElementById"],"mappings":"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","file":"static/js/main.72d8c118.chunk.js","sourcesContent":["import React from \"react\"\n\nconst cardStyle = {\n  padding: \"1rem\",\n  display: \"flex\",\n  flexDirection: \"column\"\n}\n\nconst imgStyle = {\n  height: 100,\n  width: 100,\n  borderRadius: 25\n}\n\nconst nameStyle = {\n  backgroundColor: \"rgba(0,0,0,0.7)\",\n  color: \"white\",\n  textAlign: \"center\",\n  marginTop: 5,\n  borderRadius: 25\n}\n\nexport default class Grid extends React.Component {\n  render() {\n    const { img, name } = this.props\n    return (\n      <div style={cardStyle}>\n        <img style={imgStyle} src={img} alt=\"\" />\n        <div style={nameStyle}>{name}</div>\n      </div>\n    )\n  }\n}\n","import React from \"react\"\nimport GridCard from \"./GridCard\"\n\nconst style = {\n  display: \"flex\",\n  gridGap: \"1rem\",\n  justifyContent: \"center\",\n  flexWrap: 'wrap',\n  gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\",\n  paddingTop: \"1rem\",\n  backgroundColor: \"rgba(0,0,0,0.7)\",\n  paddingBottom: 20\n}\n\nconst techList = [\n  {\n    name: \"JavaScript\",\n    img: \"JavaScript.png\"\n  },\n  {\n    name: \"React\",\n    img: \"React.png\"\n  },\n  {\n    name: \"Ember\",\n    img: \"Ember.png\"\n  },\n  {\n    name: \"Node\",\n    img: \"Node.png\"\n  },\n  {\n    name: \"Python\",\n    img: \"Python.png\"\n  },\n  {\n    name: \"Ruby\",\n    img: \"Ruby.png\"\n  },\n  {\n    name: \"C++\",\n    img: \"CPP.png\"\n  }\n]\n\nexport default class Grid extends React.Component {\n  render() {\n    const cards = techList.map(tech => {\n      return (\n        <GridCard\n          key={`${tech.name}-i`}\n          img={`${process.env.PUBLIC_URL}/${tech.img}`}\n          name={tech.name}\n        />\n      )\n    })\n\n    return (\n      <>\n        <div style={style}>{cards}</div>\n      </>\n    )\n  }\n}\n","import React from \"react\"\nimport \"./CSS/text-bubble.css\"\n\nconst profileImageStyle = {\n  borderRadius: \"50%\",\n  width: 100,\n  height: 100\n}\n\nconst ContainerStyle = {\n  display: \"flex\",\n  // backgroundColor: \"rgba(255,255,255,0.5)\",\n  paddingTop: 25,\n  paddingBottom: 40\n}\nconst textBubble = {\n  color: \"white\",\n  padding: \"1rem\",\n  backgroundColor: \"rgba(0,0,0,0.7)\",\n  marginTop: \"auto\",\n  borderRadius: 10,\n  paddingLeft: 5,\n  marginLeft: 10,\n  marginRight: \"0.5vw\"\n}\n\nexport default class TextBubble extends React.Component {\n  render() {\n    const { style, reverse, avatar, content } = this.props\n    return (\n      <div\n        style={{\n          ...ContainerStyle,\n          ...style,\n          flexDirection: reverse ? \"row-reverse\" : \"row\"\n        }}\n        className={reverse ? \"bubble-container-reverse\" : \"bubble-container\"}\n      >\n        <img\n          src={avatar}\n          style={profileImageStyle}\n          alt=\"\"\n          className={reverse ? \"avatar-reverse\" : \"avatar\"}\n        />\n        <div style={textBubble} className=\"text-bubble\">\n          {content}\n        </div>\n      </div>\n    )\n  }\n}\n","import React from \"react\"\nimport \"./CSS/sign-board.css\"\n\nconst container = {\n  color: \"white\",\n  display: \"flex\",\n  backgroundColor: \"rgba(0,0,0,0.8)\",\n  borderRadiusBottom: \"30%\",\n  padding: 15,\n  paddingLeft: 50\n}\n\nconst subTitleStyle = {\n  paddingLeft: 50,\n  marginTop: \"auto\"\n}\n\nexport default class TextBubble extends React.Component {\n  render() {\n    const { style, title, subTitle } = this.props\n    const containerStyle = style ? { ...container, ...style } : container\n    return (\n      <div style={containerStyle}>\n        <div>\n          <div className=\"sign-board-title\">{title}</div>\n          <div style={subTitleStyle} className=\"sign-board-sub-title\">\n            {subTitle}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from \"react\"\nimport \"./CSS/input.css\"\n\nexport default class Input extends React.Component {\n  constructor(props) {\n    super(props)\n    this.inputRef = React.createRef()\n  }\n\n  addTextToChat(text) {\n    const { onSubmit } = this.props\n    onSubmit(text)\n  }\n\n  render() {\n    return (\n      <div className=\"form-container\">\n        <form\n          onSubmit={e => {\n            e.preventDefault()\n            this.addTextToChat(this.inputRef.current.value)\n            this.inputRef.current.value = \"\"\n          }}\n        >\n          <div className=\"chat-input-container\">\n            <div className=\"suggestion-button-container\">\n              <button\n                onClick={() => {\n                  this.addTextToChat(`Help!`)\n                }}\n                type=\"button\"\n                className=\"suggestions\"\n              >\n                Help\n              </button>\n              <button\n                onClick={() => {\n                  this.addTextToChat(`I'd like to know more about your skills`)\n                }}\n                type=\"button\"\n                className=\"suggestions\"\n              >\n                Skills\n              </button>\n              <button\n                onClick={() => {\n                  this.addTextToChat(\n                    `I want to talk to the real Marshall, can I get his contact info?`\n                  )\n                }}\n                type=\"button\"\n                className=\"suggestions\"\n              >\n                Contact\n              </button>\n            </div>\n            <input\n              autoFocus\n              ref={this.inputRef}\n              className=\"input-style\"\n              type=\"text\"\n              placeholder=\"Chat\"\n            />\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n","import React from \"react\"\nimport \"./CSS/input.css\"\n\nexport default class Chat extends React.Component {\n  constructor(props) {\n    super(props)\n    this.scrollRef = React.createRef()\n  }\n\n  componentDidUpdate() {\n    window.scrollTo(0, document.body.scrollHeight)\n  }\n\n  render() {\n    const { chat } = this.props\n    return (\n      <div ref={this.scrollRef} style={{ backgroundColor: \"rgba(255,255,255,0.2)\", flexGrow: 10 }}>\n        {chat}\n      </div>\n    )\n  }\n}\n","export default {\n  INTENTS: [\"help\", \"skills\", \"resume\", \"contact\"],\n  getIntent(textString) {\n    const lowerCase = textString.toLowerCase()\n    for (let i = this.INTENTS.length - 1; i >= 0; i--) {\n      if (lowerCase.includes(this.INTENTS[i])) {\n        return this.INTENTS[i]\n      }\n    }\n    return \"help\"\n  }\n}\n","import React from \"react\"\nimport Grid from \"./Grid\"\nimport TextBubble from \"./TextBubble\"\nimport SignBoard from \"./SignBoard\"\nimport Input from \"./Input\"\nimport Chat from \"./Chat\"\nimport ResponseParser from \"../lib/ResponseParser\"\n\nconst backgroundStyle = {\n  minHeight: \"100vh\",\n  background: `url('${process.env.PUBLIC_URL}/blue_ocean.jpeg') no-repeat center center fixed`,\n  backgroundSize: \"cover\",\n  display: 'flex',\n  flexDirection: 'column'\n}\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      beachLoaded: false,\n      chat: [\n        <TextBubble\n          avatar={`${process.env.PUBLIC_URL}/profile.jpg`}\n          content={\n            \"Hello there, my name is Marshall. I'm an experienced Full Stack Developer\"\n          }\n          key={0}\n        />\n      ]\n    }\n  }\n\n  componentDidMount() {\n    const preload = [\n      { name: \"beachLoaded\", src: `${process.env.PUBLIC_URL}/blue_ocean.jpeg` },\n      { name: \"avatar1\", src: `${process.env.PUBLIC_URL}/avatar-ph.png` },\n      { name: \"avatar2\", src: `${process.env.PUBLIC_URL}/profile.jpg` }\n    ]\n    preload.forEach(preloadImg => {\n      const img = new Image()\n      img.src = preloadImg.src\n      const newState = {}\n      newState[preloadImg.name] = true\n      img.onerror = err => {\n        console.error(err)\n        this.setState(newState)\n      }\n      img.onload = () => {\n        this.setState(newState)\n      }\n    })\n  }\n\n  addContent(comp) {\n    this.setState(state => {\n      return {\n        ...state,\n        chat: [...state.chat, comp]\n      }\n    })\n  }\n\n  updateChat(newText, host = false) {\n    const avatar = host\n      ? `${process.env.PUBLIC_URL}/profile.jpg`\n      : `${process.env.PUBLIC_URL}/avatar-ph.png`\n    this.setState(state => {\n      return {\n        ...state,\n        chat: [\n          ...state.chat,\n          <TextBubble\n            reverse={!host}\n            avatar={avatar}\n            content={newText}\n            key={state.chat.length}\n          />\n        ]\n      }\n    })\n    if (!host) {\n      const response = this.generateResponse(newText)\n      this.renderFollowUp(response.text, 1000, response.comp)\n    }\n  }\n\n  generateResponse(response) {\n    const intent = ResponseParser.getIntent(response)\n    if (intent === \"skills\") {\n      return {\n        text: `Let me get a list of Marshall's skills for you`,\n        comp: (\n          <>\n            <SignBoard\n              title=\"Tech\"\n              subTitle=\"A few things I have been known to use\"\n            />\n            <Grid />\n          </>\n        )\n      }\n    }\n    if (intent === \"contact\") {\n      return {\n        text:\n          'Great! You can reach out at any time via email at Marshall.Rattai@gmail.com, excited to hear from you.'\n      }\n    }\n    return {\n      text: `Appologies, My functionality is very limited at the moment, please enter one of the following key words: \"Skills\", or \"Contact\"`\n    }\n  }\n\n  renderFollowUp(text, timeout, comp) {\n    setTimeout(() => {\n      this.updateChat(text, true)\n    }, timeout)\n    if (comp) {\n      setTimeout(() => {\n        this.addContent(comp)\n      }, 3000)\n    }\n  }\n\n  render() {\n    const { beachLoaded, chat } = this.state\n    if (!beachLoaded) {\n      // TODO Put a spinner here.\n      return null\n    }\n    return (\n      <div style={backgroundStyle}>\n        <SignBoard title=\"Marshall Yukio Rattai\" subTitle=\"Software Engineer\" />\n        <Chat chat={chat} />\n        <Input\n          onSubmit={newText => {\n            this.updateChat(newText)\n          }}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Main\n","import React, { Component } from \"react\"\nimport Main from \"./components/Main\"\n\nclass App extends Component {\n  render() {\n    return <Main />\n  }\n}\n\nexport default App\n","import React from \"react\"\nimport { render } from \"react-dom\"\nimport App from \"./App\"\nimport \"bootstrap/dist/css/bootstrap.css\"\n\nrender(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}